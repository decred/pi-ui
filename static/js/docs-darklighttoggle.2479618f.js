(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"./src/docs/darklighttoggle.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return m}));var s=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),l=n("./node_modules/react/index.js"),o=n("./node_modules/@mdx-js/react/dist/esm.js"),r=n("./node_modules/docz/dist/index.esm.js"),d=n("./src/index.js"),g=n("./src/css/base.css"),i=n.n(g),c=["components"],b={};function m(e){var t=e.components,n=Object(a.a)(e,c);return Object(o.b)("wrapper",Object.assign({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"darklighttoggle-switch"},"DarkLightToggle Switch"),Object(o.b)("h2",{id:"properties"},"Properties"),Object(o.b)(r.d,{of:d.j,mdxType:"Props"}),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)(r.c,{__position:1,__code:'{() => {\n    const initialLabel = "I\'m light!"\n    const [label, setLabel] = useState(initialLabel)\n    const [toggled, setToggled] = useState(false)\n    const onToggleHandler = () => {\n      if (label === initialLabel) {\n        setLabel("I\'m dark!")\n        setToggled(true)\n      } else {\n        setLabel(initialLabel)\n        setToggled(false)\n      }\n    }\n    return (\n      <Fragment>\n        <div className={styles.toggleWrapperExample}>\n          <DarkLightToggle onToggle={onToggleHandler} toggled={toggled} />\n          <div className={styles.toggleLabelExample}>{label}\n        </div>\n      </Fragment>\n    )\n  }}\n</Playground>',__scope:{props:this?this.props:n,useState:l.useState,Fragment:l.Fragment,Playground:r.c,Props:r.d,DarkLightToggle:d.j,styles:i.a},__codesandbox:"undefined",mdxType:"Playground"},(function(){var e=Object(l.useState)("I'm light!"),t=Object(s.a)(e,2),n=t[0],a=t[1],r=Object(l.useState)(!1),g=Object(s.a)(r,2),c=g[0],b=g[1];return Object(o.b)(l.Fragment,{mdxType:"Fragment"},Object(o.b)("div",{className:i.a.toggleWrapperExample},Object(o.b)(d.j,{onToggle:function(){"I'm light!"===n?(a("I'm dark!"),b(!0)):(a("I'm light!"),b(!1))},toggled:c,mdxType:"DarkLightToggle"}),Object(o.b)("div",{className:i.a.toggleLabelExample},n)))})))}m&&m===Object(m)&&Object.isExtensible(m)&&Object.defineProperty(m,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/darklighttoggle.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-darklighttoggle.05da19b68a4a670388f9.js.map