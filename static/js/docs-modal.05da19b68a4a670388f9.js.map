{"version":3,"sources":["/home/runner/work/pi-ui/pi-ui/src/docs/modal.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","of","ModalWrapper","__position","__code","__scope","this","useState","Fragment","Playground","Props","Modal","Button","P","__codesandbox","showModal","setShowModal","onClick","show","onClose","title","iconType","closeModal","disableClose","isMDXComponent"],"mappings":"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","file":"static/js/docs-modal.1419034c.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { useState, Fragment } from \"react\";\nimport { Playground, Props } from \"docz\";\nimport { Modal, Button, P, ModalWrapper } from \"../index\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={ModalWrapper} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"simple-modal\"\n    }}>{`Simple Modal`}</h3>\n    <Playground __position={1} __code={'{() => {\\n    const [showModal, setShowModal] = useState(false)\\n    const openModal = () => setShowModal(true)\\n    const closeModal = () => setShowModal(false)\\n    return (\\n      <Fragment>\\n        <Button onClick={openModal}>Open Modal\\n        <Modal show={showModal} onClose={closeModal}>\\n          Simple Modal\\n        </Modal>\\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      P,\n      ModalWrapper\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [showModal, setShowModal] = useState(false);\n\n        const openModal = () => setShowModal(true);\n\n        const closeModal = () => setShowModal(false);\n\n        return <Fragment mdxType=\"Fragment\">\n        <Button onClick={openModal} mdxType=\"Button\">Open Modal</Button>\n        <Modal show={showModal} onClose={closeModal} mdxType=\"Modal\">\n          Simple Modal\n        </Modal>\n      </Fragment>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"modal-with-title\"\n    }}>{`Modal with title`}</h3>\n    <Playground __position={2} __code={'{() => {\\n    const [showModal, setShowModal] = useState(false)\\n    const openModal = () => setShowModal(true)\\n    const closeModal = () => setShowModal(false)\\n    return (\\n      <Fragment>\\n        <Button onClick={openModal}>Open Modal\\n        <Modal\\n          title=\\\"Title\\\"\\n          iconType=\\\"mail\\\"\\n          show={showModal}\\n          onClose={closeModal}\\n        >\\n          Content!\\n        </Modal>\\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      P,\n      ModalWrapper\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [showModal, setShowModal] = useState(false);\n\n        const openModal = () => setShowModal(true);\n\n        const closeModal = () => setShowModal(false);\n\n        return <Fragment mdxType=\"Fragment\">\n        <Button onClick={openModal} mdxType=\"Button\">Open Modal</Button>\n        <Modal title=\"Title\" iconType=\"mail\" show={showModal} onClose={closeModal} mdxType=\"Modal\">\n          Content!\n        </Modal>\n      </Fragment>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"unclosable-modal\"\n    }}>{`Unclosable Modal`}</h3>\n    <Playground __position={3} __code={'{() => {\\n    const [showModal, setShowModal] = useState(false)\\n    const openModal = () => setShowModal(true)\\n    const closeModal = () => setShowModal(false)\\n    return (\\n      <Fragment>\\n        <Button onClick={openModal}>Open Modal\\n        <Modal\\n          title=\\\"Title\\\"\\n          iconType=\\\"mail\\\"\\n          show={showModal}\\n          disableClose=\\\"true\\\"\\n          onClose={closeModal}\\n        >\\n          <P>Content!</P>\\n          <br />\\n          <Button onClick={closeModal}>close me!</Button>\\n        </Modal>\\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      P,\n      ModalWrapper\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [showModal, setShowModal] = useState(false);\n\n        const openModal = () => setShowModal(true);\n\n        const closeModal = () => setShowModal(false);\n\n        return <Fragment mdxType=\"Fragment\">\n        <Button onClick={openModal} mdxType=\"Button\">Open Modal</Button>\n        <Modal title=\"Title\" iconType=\"mail\" show={showModal} disableClose=\"true\" onClose={closeModal} mdxType=\"Modal\">\n          <P mdxType=\"P\">Content!</P>\n          <br />\n          <Button onClick={closeModal} mdxType=\"Button\">close me!</Button>\n        </Modal>\n      </Fragment>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"modal-with-huge-contet\"\n    }}>{`Modal with huge contet`}</h3>\n    <Playground __position={4} __code={'{() => {\\n    const [showModal, setShowModal] = useState(false)\\n    const openModal = () => setShowModal(true)\\n    const closeModal = () => setShowModal(false)\\n    return (\\n      <Fragment>\\n        <Button onClick={openModal}>Open Modal\\n        <Modal title=\\\"Title\\\" show={showModal} onClose={closeModal}>\\n          <P>\\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita,\\n            veniam distinctio illum, nesciunt dolorum tempore minus voluptate\\n            omnis facilis illo earum inventore quibusdam iste dolores id unde\\n            neque ipsum rerum?\\n          </P>\\n          <P>\\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam beatae\\n            perspiciatis, natus dolorum adipisci repellendus debitis temporibus\\n            fuga dicta dolorem veniam doloribus maxime nostrum? Dolores ullam at\\n            voluptate saepe ipsa!\\n          </P>\\n          <P>\\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Sunt,\\n            eligendi! Cum vero non saepe eius ratione quam ea laudantium dolor\\n            autem, illo aliquam commodi sequi iure at totam fugit dolores.\\n          </P>\\n          <P>\\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita,\\n            veniam distinctio illum, nesciunt dolorum tempore minus voluptate\\n            omnis facilis illo earum inventore quibusdam iste dolores id unde\\n            neque ipsum rerum?\\n          </P>\\n          <P>\\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam beatae\\n            perspiciatis, natus dolorum adipisci repellendus debitis temporibus\\n            fuga dicta dolorem veniam doloribus maxime nostrum? Dolores ullam at\\n            voluptate saepe ipsa!\\n          </P>\\n          <P>\\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Sunt,\\n            eligendi! Cum vero non saepe eius ratione quam ea laudantium dolor\\n            autem, illo aliquam commodi sequi iure at totam fugit dolores.\\n          </P>\\n        </Modal>\\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      P,\n      ModalWrapper\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [showModal, setShowModal] = useState(false);\n\n        const openModal = () => setShowModal(true);\n\n        const closeModal = () => setShowModal(false);\n\n        return <Fragment mdxType=\"Fragment\">\n        <Button onClick={openModal} mdxType=\"Button\">Open Modal</Button>\n        <Modal title=\"Title\" show={showModal} onClose={closeModal} mdxType=\"Modal\">\n          <P mdxType=\"P\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita,\n            veniam distinctio illum, nesciunt dolorum tempore minus voluptate\n            omnis facilis illo earum inventore quibusdam iste dolores id unde\n            neque ipsum rerum?\n          </P>\n          <P mdxType=\"P\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam beatae\n            perspiciatis, natus dolorum adipisci repellendus debitis temporibus\n            fuga dicta dolorem veniam doloribus maxime nostrum? Dolores ullam at\n            voluptate saepe ipsa!\n          </P>\n          <P mdxType=\"P\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Sunt,\n            eligendi! Cum vero non saepe eius ratione quam ea laudantium dolor\n            autem, illo aliquam commodi sequi iure at totam fugit dolores.\n          </P>\n          <P mdxType=\"P\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita,\n            veniam distinctio illum, nesciunt dolorum tempore minus voluptate\n            omnis facilis illo earum inventore quibusdam iste dolores id unde\n            neque ipsum rerum?\n          </P>\n          <P mdxType=\"P\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam beatae\n            perspiciatis, natus dolorum adipisci repellendus debitis temporibus\n            fuga dicta dolorem veniam doloribus maxime nostrum? Dolores ullam at\n            voluptate saepe ipsa!\n          </P>\n          <P mdxType=\"P\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Sunt,\n            eligendi! Cum vero non saepe eius ratione quam ea laudantium dolor\n            autem, illo aliquam commodi sequi iure at totam fugit dolores.\n          </P>\n        </Modal>\n      </Fragment>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}