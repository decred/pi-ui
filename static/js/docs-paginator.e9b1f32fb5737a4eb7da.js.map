{"version":3,"sources":["/home/runner/work/pi-ui/pi-ui/src/docs/paginator.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","of","Paginator","__position","__code","__scope","this","useState","Fragment","Playground","Props","__codesandbox","selectedPage","setSelectedPage","pageCount","onPageChange","selected","paginationGap","marginPagesDisplayed","isMDXComponent"],"mappings":"mhBAWMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,aADR,aAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAWF,QAAQ,UAC9B,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,qBADR,qBAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,gVAAiVC,QAAS,CAC3XN,MAAOO,KAAOA,KAAKP,MAAQA,EAC3BQ,oBACAC,oBACAC,eACAC,UACAR,eACCS,cAAa,YAAeX,QAAQ,eACxC,WAAO,IAAD,EACuCO,mBAAS,GADhD,mBACMK,EADN,KACoBC,EADpB,KAQD,OAAO,YAAC,WAAD,CAAUb,QAAQ,YACzB,iCAASY,EAAe,EAAxB,YAFkB,KAGlB,YAAC,IAAD,CAAWE,UAHO,GAGeC,aAPZ,SAAC,GAAD,IACnBC,EADmB,EACnBA,SADmB,OAEfH,EAAgBG,IAKuChB,QAAQ,kBAIzE,iBAAQ,CACN,GAAM,gEADR,gEAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,+MAAgNC,QAAS,CAC1PN,MAAOO,KAAOA,KAAKP,MAAQA,EAC3BQ,oBACAC,oBACAC,eACAC,UACAR,eACCS,cAAa,YAAeX,QAAQ,eACxC,WAEK,OAAO,YAAC,WAAD,CAAUA,QAAQ,YACzB,YAAC,IAAD,CAAWc,UAFO,GAEeG,cAAe,EAAGC,qBAAsB,EAAGlB,QAAQ,mB,4KAQ5FH,EAAWsB,gBAAiB","file":"static/js/docs-paginator.718a5a71.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { useState, Fragment } from \"react\";\nimport { Playground, Props } from \"docz\";\nimport { Paginator } from \"../index\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"paginator\"\n    }}>{`Paginator`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Paginator} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"default-paginator\"\n    }}>{`Default Paginator`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const [selectedPage, setSelectedPage] = useState(0)\\n  const onPageChange = ({ selected }) => setSelectedPage(selected)\\n  const pageCount = 20\\n  return (\\n    <Fragment>\\n      <div>{`${selectedPage + 1}/${pageCount}`}</div>\\n      <Paginator pageCount={pageCount} onPageChange={onPageChange} />\\n    </Fragment>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Paginator\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [selectedPage, setSelectedPage] = useState(0);\n\n        const onPageChange = ({\n          selected\n        }) => setSelectedPage(selected);\n\n        const pageCount = 20;\n        return <Fragment mdxType=\"Fragment\">\n        <div>{`${selectedPage + 1}/${pageCount}`}</div>\n        <Paginator pageCount={pageCount} onPageChange={onPageChange} mdxType=\"Paginator\" />\n      </Fragment>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"paginator-with-custom-paginationgap-and-marginpagesdisplayed\"\n    }}>{`Paginator with custom paginationGap and marginPagesDisplayed`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const pageCount = 20\\n  return (\\n    <Fragment>\\n      <Paginator\\n        pageCount={pageCount}\\n        paginationGap={2}\\n        marginPagesDisplayed={2}\\n      />\\n    </Fragment>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Paginator\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const pageCount = 20;\n        return <Fragment mdxType=\"Fragment\">\n        <Paginator pageCount={pageCount} paginationGap={2} marginPagesDisplayed={2} mdxType=\"Paginator\" />\n      </Fragment>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}