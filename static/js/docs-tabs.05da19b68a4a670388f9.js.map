{"version":3,"sources":["/home/runner/work/pi-ui/pi-ui/src/docs/tabs.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","of","Tabs","__position","__code","__scope","this","useState","Fragment","Playground","Props","Tab","__codesandbox","activeTabIndex","setActiveTabIndex","onSelectTab","label","kind","mode","count","style","overflow","position","height","contentAnimation","key","isMDXComponent"],"mappings":"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","file":"static/js/docs-tabs.f517aeff.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { useState, Fragment } from \"react\";\nimport { Playground, Props } from \"docz\";\nimport { Tabs, Tab } from \"../index\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Tabs} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"simple-tabs\"\n    }}>{`Simple Tabs`}</h3>\n    <Playground __position={1} __code={'{() => {\\n    const [activeTabIndex, setActiveTabIndex] = useState(0)\\n    return (\\n      <Fragment>\\n        <Tabs onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex}>\\n          <Tab label=\\\"tab 1\\\" />\\n          <Tab label=\\\"tab 2\\\" />\\n          <Tab label=\\\"tab 3\\\" />\\n        \\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Tabs,\n      Tab\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [activeTabIndex, setActiveTabIndex] = useState(0);\n        return <Fragment mdxType=\"Fragment\">\n        <Tabs onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex} mdxType=\"Tabs\">\n          <Tab label=\"tab 1\" mdxType=\"Tab\" />\n          <Tab label=\"tab 2\" mdxType=\"Tab\" />\n          <Tab label=\"tab 3\" mdxType=\"Tab\" />\n        </Tabs>\n      </Fragment>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"secondary-tabs\"\n    }}>{`Secondary Tabs`}</h3>\n    <Playground __position={2} __code={'{() => {\\n    const [activeTabIndex, setActiveTabIndex] = useState(0)\\n    return (\\n      <Fragment>\\n        <Tabs\\n          onSelectTab={setActiveTabIndex}\\n          activeTabIndex={activeTabIndex}\\n          kind=\\\"secondary\\\"\\n        >\\n          <Tab label=\\\"tab 1\\\" />\\n          <Tab label=\\\"tab 2\\\" />\\n          <Tab label=\\\"tab 3\\\" />\\n        \\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Tabs,\n      Tab\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [activeTabIndex, setActiveTabIndex] = useState(0);\n        return <Fragment mdxType=\"Fragment\">\n        <Tabs onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex} kind=\"secondary\" mdxType=\"Tabs\">\n          <Tab label=\"tab 1\" mdxType=\"Tab\" />\n          <Tab label=\"tab 2\" mdxType=\"Tab\" />\n          <Tab label=\"tab 3\" mdxType=\"Tab\" />\n        </Tabs>\n      </Fragment>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"vertical-tabs\"\n    }}>{`Vertical Tabs`}</h3>\n    <Playground __position={3} __code={'{() => {\\n    const [activeTabIndex, setActiveTabIndex] = useState(0)\\n    return (\\n      <Fragment>\\n        <Tabs\\n          mode=\\\"vertical\\\"\\n          onSelectTab={setActiveTabIndex}\\n          activeTabIndex={activeTabIndex}\\n        >\\n          <Tab label=\\\"What is Politeia?\\\" />\\n          <Tab label=\\\"Proposals?\\\" />\\n          <Tab label=\\\"Censorship\\\" />\\n        \\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Tabs,\n      Tab\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [activeTabIndex, setActiveTabIndex] = useState(0);\n        return <Fragment mdxType=\"Fragment\">\n        <Tabs mode=\"vertical\" onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex} mdxType=\"Tabs\">\n          <Tab label=\"What is Politeia?\" mdxType=\"Tab\" />\n          <Tab label=\"Proposals?\" mdxType=\"Tab\" />\n          <Tab label=\"Censorship\" mdxType=\"Tab\" />\n        </Tabs>\n      </Fragment>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tabs-with-counting\"\n    }}>{`Tabs with counting`}</h3>\n    <Playground __position={4} __code={'{() => {\\n    const [activeTabIndex, setActiveTabIndex] = useState(0)\\n    return (\\n      <Fragment>\\n        <Tabs onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex}>\\n          <Tab label=\\\"tab 1\\\" count={1} />\\n          <Tab label=\\\"tab 2\\\" count={4} />\\n        \\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Tabs,\n      Tab\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [activeTabIndex, setActiveTabIndex] = useState(0);\n        return <Fragment mdxType=\"Fragment\">\n        <Tabs onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex} mdxType=\"Tabs\">\n          <Tab label=\"tab 1\" count={1} mdxType=\"Tab\" />\n          <Tab label=\"tab 2\" count={4} mdxType=\"Tab\" />\n        </Tabs>\n      </Fragment>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tabs-with-content\"\n    }}>{`Tabs with content`}</h3>\n    <Playground __position={5} __code={'{() => {\\n    const [activeTabIndex, setActiveTabIndex] = useState(0)\\n    return (\\n      <Fragment>\\n        <Tabs onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex}>\\n          <Tab label=\\\"tab 1\\\" count={1}>\\n            <div>tab content 1\\n          </Tab>\\n          <Tab label=\\\"tab 2\\\" count={4}>\\n            <div>tab content 2</div>\\n          </Tab>\\n        </Tabs>\\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Tabs,\n      Tab\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [activeTabIndex, setActiveTabIndex] = useState(0);\n        return <Fragment mdxType=\"Fragment\">\n        <Tabs onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex} mdxType=\"Tabs\">\n          <Tab label=\"tab 1\" count={1} mdxType=\"Tab\">\n            <div>tab content 1</div>\n          </Tab>\n          <Tab label=\"tab 2\" count={4} mdxType=\"Tab\">\n            <div>tab content 2</div>\n          </Tab>\n        </Tabs>\n      </Fragment>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tabs-in-dropwdown-mode\"\n    }}>{`Tabs in dropwdown mode`}</h3>\n    <Playground __position={6} __code={'{() => {\\n    const [activeTabIndex, setActiveTabIndex] = useState(0)\\n    return (\\n      <Fragment>\\n        <Tabs\\n          onSelectTab={setActiveTabIndex}\\n          activeTabIndex={activeTabIndex}\\n          mode=\\\"dropdown\\\"\\n        >\\n          <Tab label=\\\"All Proposals\\\" count={4} />\\n          <Tab label=\\\"In discussion\\\" count={2} />\\n          <Tab label=\\\"Voting\\\" count={5} />\\n          <Tab label=\\\"Approved\\\" count={25} />\\n          <Tab label=\\\"Rejected\\\" count={30} />\\n          <Tab label=\\\"Abandoned\\\" count={5} />\\n        \\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Tabs,\n      Tab\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [activeTabIndex, setActiveTabIndex] = useState(0);\n        return <Fragment mdxType=\"Fragment\">\n        <Tabs onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex} mode=\"dropdown\" mdxType=\"Tabs\">\n            <Tab label=\"All Proposals\" count={4} mdxType=\"Tab\" />\n            <Tab label=\"In discussion\" count={2} mdxType=\"Tab\" />\n            <Tab label=\"Voting\" count={5} mdxType=\"Tab\" />\n            <Tab label=\"Approved\" count={25} mdxType=\"Tab\" />\n            <Tab label=\"Rejected\" count={30} mdxType=\"Tab\" />\n            <Tab label=\"Abandoned\" count={5} mdxType=\"Tab\" />\n        </Tabs>\n      </Fragment>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tabs-with-slide-content-animation\"\n    }}>{`Tabs with slide content animation`}</h3>\n    <Playground __position={7} __code={'{() => {\\n    const [activeTabIndex, setActiveTabIndex] = useState(0)\\n    return (\\n      <div style={{ overflow: \\'hidden\\', position: \\'relative\\', height: \\'80px\\' }}>\\n        <Tabs\\n          onSelectTab={setActiveTabIndex}\\n          activeTabIndex={activeTabIndex}\\n          contentAnimation=\\\"slide\\\"\\n        >\\n          <Tab label=\\\"tab 1\\\" count={1}>\\n            <div key={1}>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\\n              sit amet est sed urna sollicitudin imperdiet vitae eu massa.\\n            \\n          </Tab>\\n          <Tab label=\\\"tab 2\\\" count={4}>\\n            <div key={2}>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\\n              sit amet est sed urna sollicitudin imperdiet vitae eu massa.\\n            </div>\\n          </Tab>\\n          <Tab label=\\\"tab 3\\\">\\n            <div key={3}>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\\n              sit amet est sed urna sollicitudin imperdiet vitae eu massa.\\n            </div>\\n          </Tab>\\n        </Tabs>\\n      </div>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Tabs,\n      Tab\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [activeTabIndex, setActiveTabIndex] = useState(0);\n        return <div style={{\n          overflow: \"hidden\",\n          position: \"relative\",\n          height: \"80px\"\n        }}>\n        <Tabs onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex} contentAnimation=\"slide\" mdxType=\"Tabs\">\n          <Tab label=\"tab 1\" count={1} mdxType=\"Tab\">\n            <div key={1}>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n              sit amet est sed urna sollicitudin imperdiet vitae eu massa.\n            </div>\n          </Tab>\n          <Tab label=\"tab 2\" count={4} mdxType=\"Tab\">\n            <div key={2}>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n              sit amet est sed urna sollicitudin imperdiet vitae eu massa.\n            </div>\n          </Tab>\n          <Tab label=\"tab 3\" mdxType=\"Tab\">\n            <div key={3}>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n              sit amet est sed urna sollicitudin imperdiet vitae eu massa.\n            </div>\n          </Tab>\n        </Tabs>\n      </div>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"tabs-without-content-animation\"\n    }}>{`Tabs without content animation`}</h3>\n    <Playground __position={8} __code={'{() => {\\n    const [activeTabIndex, setActiveTabIndex] = useState(0)\\n    return (\\n      <Fragment>\\n        <Tabs\\n          onSelectTab={setActiveTabIndex}\\n          activeTabIndex={activeTabIndex}\\n          contentAnimation=\\\"none\\\"\\n        >\\n          <Tab label=\\\"tab 1\\\" count={1}>\\n            <div key={1}>tab content 1\\n          </Tab>\\n          <Tab label=\\\"tab 2\\\" count={4}>\\n            <div key={2}>tab content 2</div>\\n          </Tab>\\n          <Tab label=\\\"tab 3\\\">\\n            <div key={3}>tab content 3</div>\\n          </Tab>\\n        </Tabs>\\n      </Fragment>\\n    )\\n  }}\\n</Playground>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Tabs,\n      Tab\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [activeTabIndex, setActiveTabIndex] = useState(0);\n        return <Fragment mdxType=\"Fragment\">\n        <Tabs onSelectTab={setActiveTabIndex} activeTabIndex={activeTabIndex} contentAnimation=\"none\" mdxType=\"Tabs\">\n          <Tab label=\"tab 1\" count={1} mdxType=\"Tab\">\n            <div key={1}>tab content 1</div>\n          </Tab>\n          <Tab label=\"tab 2\" count={4} mdxType=\"Tab\">\n            <div key={2}>tab content 2</div>\n          </Tab>\n          <Tab label=\"tab 3\" mdxType=\"Tab\">\n            <div key={3}>tab content 3</div>\n          </Tab>\n        </Tabs>\n      </Fragment>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}