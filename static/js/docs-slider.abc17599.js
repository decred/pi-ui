(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{"./src/docs/slider.mdx":function(e,n,a){"use strict";a.r(n),a.d(n,"default",(function(){return u}));var t=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),i=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),l=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),d=a("./node_modules/react/index.js"),s=a("./node_modules/@mdx-js/react/dist/esm.js"),r=a("./node_modules/docz/dist/index.esm.js"),b=a("./src/index.js"),o={};function u(e){var n=e.components,a=Object(l.a)(e,["components"]);return Object(s.b)("wrapper",Object.assign({},o,a,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"slider"},"Slider"),Object(s.b)("h2",{id:"slider-props"},"Slider props"),Object(s.b)(r.d,{of:b.E,mdxType:"Props"}),Object(s.b)("h2",{id:"usage"},"Usage"),Object(s.b)("h3",{id:"single-horizontal-slider"},"Single horizontal slider"),Object(s.b)(r.c,{__position:1,__code:'() => {\n  const [coordinates, setCoordinates] = useState({ handle1: 0, handle2: 40 })\n  const [min, setMin] = useState(0)\n  const [max, setMax] = useState(100)\n  const [disabled, setDisabled] = useState(false)\n  return (\n    <Fragment>\n      <Slider\n        double={false}\n        disabled={disabled}\n        axis={\'x\'}\n        max={max}\n        min={min}\n        handles={[\n          {\n            value: coordinates.handle1,\n            onChange: value =>\n              setCoordinates(coordinates => ({\n                ...coordinates,\n                handle1: value,\n              })),\n          },\n        ]}\n      />\n      <br />\n      <br />\n      <Checkbox\n        label="Disabled"\n        id="single-horizontal-slider-disabled"\n        checked={disabled}\n        onChange={() => setDisabled(!disabled)}\n      />\n      <NumberInput\n        label="Minimum"\n        id="single-horizontal-slider-min"\n        value={min}\n        onChange={e => {\n          const newLimit = parseInt(e.target.value)\n          if (newLimit < max) setMin(newLimit)\n        }}\n      />\n      <br />\n      <NumberInput\n        label="Maximum"\n        id="single-horizontal-slider-max"\n        value={max}\n        onChange={e => {\n          const newLimit = parseInt(e.target.value)\n          if (newLimit > min) setMax(newLimit)\n        }}\n      />\n    </Fragment>\n  )\n}',__scope:{props:this?this.props:a,useState:d.useState,Fragment:d.Fragment,Playground:r.c,Props:r.d,Slider:b.E,NumberInput:b.z,Checkbox:b.f},__codesandbox:"undefined",mdxType:"Playground"},(function(){var e=Object(d.useState)({handle1:0,handle2:40}),n=Object(i.a)(e,2),a=n[0],l=n[1],r=Object(d.useState)(0),o=Object(i.a)(r,2),u=o[0],c=o[1],m=Object(d.useState)(100),h=Object(i.a)(m,2),p=h[0],x=h[1],g=Object(d.useState)(!1),j=Object(i.a)(g,2),O=j[0],v=j[1];return Object(s.b)(d.Fragment,{mdxType:"Fragment"},Object(s.b)(b.E,{double:!1,disabled:O,axis:"x",max:p,min:u,handles:[{value:a.handle1,onChange:function(e){return l((function(n){return Object(t.a)(Object(t.a)({},n),{},{handle1:e})}))}}],mdxType:"Slider"}),Object(s.b)("br",null),Object(s.b)("br",null),Object(s.b)(b.f,{label:"Disabled",id:"single-horizontal-slider-disabled",checked:O,onChange:function(){return v(!O)},mdxType:"Checkbox"}),Object(s.b)(b.z,{label:"Minimum",id:"single-horizontal-slider-min",value:u,onChange:function(e){var n=parseInt(e.target.value);n<p&&c(n)},mdxType:"NumberInput"}),Object(s.b)("br",null),Object(s.b)(b.z,{label:"Maximum",id:"single-horizontal-slider-max",value:p,onChange:function(e){var n=parseInt(e.target.value);n>u&&x(n)},mdxType:"NumberInput"}))})),Object(s.b)("h3",{id:"single-vertical-slider"},"Single vertical slider"),Object(s.b)(r.c,{__position:2,__code:'() => {\n  const [coordinates, setCoordinates] = useState({ handle1: 0, handle2: 40 })\n  const [min, setMin] = useState(0)\n  const [max, setMax] = useState(100)\n  const [disabled, setDisabled] = useState(false)\n  return (\n    <Fragment>\n      <Slider\n        double={false}\n        disabled={disabled}\n        axis={\'y\'}\n        max={max}\n        min={min}\n        handles={[\n          {\n            value: coordinates.handle1,\n            onChange: value =>\n              setCoordinates(coordinates => ({\n                ...coordinates,\n                handle1: value,\n              })),\n          },\n        ]}\n      />\n      <br />\n      <br />\n      <Checkbox\n        label="Disabled"\n        id="single-vertical-slider-disabled"\n        checked={disabled}\n        onChange={() => setDisabled(!disabled)}\n      />\n      <NumberInput\n        label="Minimum"\n        id="single-vertical-slider-min"\n        value={min}\n        onChange={e => {\n          const newLimit = parseInt(e.target.value)\n          if (newLimit < max) setMin(newLimit)\n        }}\n      />\n      <br />\n      <NumberInput\n        label="Maximum"\n        id="single-vertical-slider-max"\n        value={max}\n        onChange={e => {\n          const newLimit = parseInt(e.target.value)\n          if (newLimit > min) setMax(newLimit)\n        }}\n      />\n    </Fragment>\n  )\n}',__scope:{props:this?this.props:a,useState:d.useState,Fragment:d.Fragment,Playground:r.c,Props:r.d,Slider:b.E,NumberInput:b.z,Checkbox:b.f},__codesandbox:"undefined",mdxType:"Playground"},(function(){var e=Object(d.useState)({handle1:0,handle2:40}),n=Object(i.a)(e,2),a=n[0],l=n[1],r=Object(d.useState)(0),o=Object(i.a)(r,2),u=o[0],c=o[1],m=Object(d.useState)(100),h=Object(i.a)(m,2),p=h[0],x=h[1],g=Object(d.useState)(!1),j=Object(i.a)(g,2),O=j[0],v=j[1];return Object(s.b)(d.Fragment,{mdxType:"Fragment"},Object(s.b)(b.E,{double:!1,disabled:O,axis:"y",max:p,min:u,handles:[{value:a.handle1,onChange:function(e){return l((function(n){return Object(t.a)(Object(t.a)({},n),{},{handle1:e})}))}}],mdxType:"Slider"}),Object(s.b)("br",null),Object(s.b)("br",null),Object(s.b)(b.f,{label:"Disabled",id:"single-vertical-slider-disabled",checked:O,onChange:function(){return v(!O)},mdxType:"Checkbox"}),Object(s.b)(b.z,{label:"Minimum",id:"single-vertical-slider-min",value:u,onChange:function(e){var n=parseInt(e.target.value);n<p&&c(n)},mdxType:"NumberInput"}),Object(s.b)("br",null),Object(s.b)(b.z,{label:"Maximum",id:"single-vertical-slider-max",value:p,onChange:function(e){var n=parseInt(e.target.value);n>u&&x(n)},mdxType:"NumberInput"}))})),Object(s.b)("h3",{id:"double-horizontal-slider"},"Double horizontal slider"),Object(s.b)(r.c,{__position:3,__code:'() => {\n  const [coordinates, setCoordinates] = useState({ handle1: 0, handle2: 40 })\n  const [min, setMin] = useState(0)\n  const [max, setMax] = useState(100)\n  const [disabled, setDisabled] = useState(false)\n  return (\n    <Fragment>\n      <Slider\n        double={true}\n        disabled={disabled}\n        axis={\'x\'}\n        max={max}\n        min={min}\n        handles={[\n          {\n            value: coordinates.handle1,\n            onChange: value =>\n              setCoordinates(coordinates => ({\n                ...coordinates,\n                handle1: value,\n              })),\n          },\n          {\n            value: coordinates.handle2,\n            onChange: value =>\n              setCoordinates(coordinates => ({\n                ...coordinates,\n                handle2: value,\n              })),\n          },\n        ]}\n      />\n      <br />\n      <br />\n      <Checkbox\n        label="Disabled"\n        id="double-horizontal-slider-disabled"\n        checked={disabled}\n        onChange={() => setDisabled(!disabled)}\n      />\n      <NumberInput\n        label="Minimum"\n        id="double-horizontal-slider-min"\n        value={min}\n        onChange={e => {\n          const newLimit = parseInt(e.target.value)\n          if (newLimit < max) setMin(newLimit)\n        }}\n      />\n      <br />\n      <NumberInput\n        label="Maximum"\n        id="double-horizontal-slider-max"\n        value={max}\n        onChange={e => {\n          const newLimit = parseInt(e.target.value)\n          if (newLimit > min) setMax(newLimit)\n        }}\n      />\n    </Fragment>\n  )\n}',__scope:{props:this?this.props:a,useState:d.useState,Fragment:d.Fragment,Playground:r.c,Props:r.d,Slider:b.E,NumberInput:b.z,Checkbox:b.f},__codesandbox:"undefined",mdxType:"Playground"},(function(){var e=Object(d.useState)({handle1:0,handle2:40}),n=Object(i.a)(e,2),a=n[0],l=n[1],r=Object(d.useState)(0),o=Object(i.a)(r,2),u=o[0],c=o[1],m=Object(d.useState)(100),h=Object(i.a)(m,2),p=h[0],x=h[1],g=Object(d.useState)(!1),j=Object(i.a)(g,2),O=j[0],v=j[1];return Object(s.b)(d.Fragment,{mdxType:"Fragment"},Object(s.b)(b.E,{double:!0,disabled:O,axis:"x",max:p,min:u,handles:[{value:a.handle1,onChange:function(e){return l((function(n){return Object(t.a)(Object(t.a)({},n),{},{handle1:e})}))}},{value:a.handle2,onChange:function(e){return l((function(n){return Object(t.a)(Object(t.a)({},n),{},{handle2:e})}))}}],mdxType:"Slider"}),Object(s.b)("br",null),Object(s.b)("br",null),Object(s.b)(b.f,{label:"Disabled",id:"double-horizontal-slider-disabled",checked:O,onChange:function(){return v(!O)},mdxType:"Checkbox"}),Object(s.b)(b.z,{label:"Minimum",id:"double-horizontal-slider-min",value:u,onChange:function(e){var n=parseInt(e.target.value);n<p&&c(n)},mdxType:"NumberInput"}),Object(s.b)("br",null),Object(s.b)(b.z,{label:"Maximum",id:"double-horizontal-slider-max",value:p,onChange:function(e){var n=parseInt(e.target.value);n>u&&x(n)},mdxType:"NumberInput"}))})),Object(s.b)("h3",{id:"double-vertical-slider"},"Double vertical slider"),Object(s.b)(r.c,{__position:4,__code:'() => {\n  const [coordinates, setCoordinates] = useState({ handle1: 0, handle2: 40 })\n  const [min, setMin] = useState(0)\n  const [max, setMax] = useState(100)\n  const [disabled, setDisabled] = useState(false)\n  return (\n    <Fragment>\n      <Slider\n        double={true}\n        disabled={disabled}\n        axis={\'y\'}\n        max={max}\n        min={min}\n        handles={[\n          {\n            value: coordinates.handle1,\n            onChange: value =>\n              setCoordinates(coordinates => ({\n                ...coordinates,\n                handle1: value,\n              })),\n          },\n          {\n            value: coordinates.handle2,\n            onChange: value =>\n              setCoordinates(coordinates => ({\n                ...coordinates,\n                handle2: value,\n              })),\n          },\n        ]}\n      />\n      <br />\n      <br />\n      <Checkbox\n        label="Disabled"\n        id="double-vertical-slider-disabled"\n        checked={disabled}\n        onChange={() => setDisabled(!disabled)}\n      />\n      <NumberInput\n        label="Minimum"\n        id="double-vertical-slider-min"\n        value={min}\n        onChange={e => {\n          const newLimit = parseInt(e.target.value)\n          if (newLimit < max) setMin(newLimit)\n        }}\n      />\n      <br />\n      <NumberInput\n        label="Maximum"\n        id="double-vertical-slider-max"\n        value={max}\n        onChange={e => {\n          const newLimit = parseInt(e.target.value)\n          if (newLimit > min) setMax(newLimit)\n        }}\n      />\n    </Fragment>\n  )\n}',__scope:{props:this?this.props:a,useState:d.useState,Fragment:d.Fragment,Playground:r.c,Props:r.d,Slider:b.E,NumberInput:b.z,Checkbox:b.f},__codesandbox:"undefined",mdxType:"Playground"},(function(){var e=Object(d.useState)({handle1:0,handle2:40}),n=Object(i.a)(e,2),a=n[0],l=n[1],r=Object(d.useState)(0),o=Object(i.a)(r,2),u=o[0],c=o[1],m=Object(d.useState)(100),h=Object(i.a)(m,2),p=h[0],x=h[1],g=Object(d.useState)(!1),j=Object(i.a)(g,2),O=j[0],v=j[1];return Object(s.b)(d.Fragment,{mdxType:"Fragment"},Object(s.b)(b.E,{double:!0,disabled:O,axis:"y",max:p,min:u,handles:[{value:a.handle1,onChange:function(e){return l((function(n){return Object(t.a)(Object(t.a)({},n),{},{handle1:e})}))}},{value:a.handle2,onChange:function(e){return l((function(n){return Object(t.a)(Object(t.a)({},n),{},{handle2:e})}))}}],mdxType:"Slider"}),Object(s.b)("br",null),Object(s.b)("br",null),Object(s.b)(b.f,{label:"Disabled",id:"double-vertical-slider-disabled",checked:O,onChange:function(){return v(!O)},mdxType:"Checkbox"}),Object(s.b)(b.z,{label:"Minimum",id:"double-vertical-slider-min",value:u,onChange:function(e){var n=parseInt(e.target.value);n<p&&c(n)},mdxType:"NumberInput"}),Object(s.b)("br",null),Object(s.b)(b.z,{label:"Maximum",id:"double-vertical-slider-max",value:p,onChange:function(e){var n=parseInt(e.target.value);n>u&&x(n)},mdxType:"NumberInput"}))})))}u&&u===Object(u)&&Object.isExtensible(u)&&Object.defineProperty(u,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/slider.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-slider.bc9b4c743439ce591cbf.js.map