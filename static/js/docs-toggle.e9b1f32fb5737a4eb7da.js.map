{"version":3,"sources":["/home/runner/work/pi-ui/pi-ui/src/docs/toggle.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","of","Toggle","__position","__code","__scope","this","useState","Fragment","Playground","Props","styles","__codesandbox","label","setLabel","toggled","setToggled","className","toggleWrapperExample","onToggle","toggleLabelExample","isMDXComponent"],"mappings":"mjBAYMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAQF,QAAQ,UAC3B,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,2lBAA+lBC,QAAS,CACzoBN,MAAOO,KAAOA,KAAKP,MAAQA,EAC3BQ,oBACAC,oBACAC,eACAC,UACAR,WACAS,YACCC,cAAa,YAAeZ,QAAQ,eACxC,WACK,IADC,EAEyBO,mBADL,cADpB,mBAEMM,EAFN,KAEaC,EAFb,OAG6BP,oBAAS,GAHtC,mBAGMQ,EAHN,KAGeC,EAHf,KAeD,OAAO,YAAC,WAAD,CAAUhB,QAAQ,YAC3B,mBAAKiB,UAAWN,IAAOO,sBACrB,YAAC,IAAD,CAAQC,SAZgB,WAJH,eAKfN,GACFC,EAAS,WACTE,GAAW,KAEXF,EATiB,cAUjBE,GAAW,KAMoBD,QAASA,EAASf,QAAQ,WAC7D,mBAAKiB,UAAWN,IAAOS,oBAAqBP,S,yKASpDhB,EAAWwB,gBAAiB","file":"static/js/docs-toggle.67936180.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { useState, Fragment } from \"react\";\nimport { Playground, Props } from \"docz\";\nimport { Toggle } from \"../index\";\nimport styles from \"../css/base.css\";\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"toggle-switch\"\n    }}>{`Toggle Switch`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Toggle} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const initialLabel = \\'Toggle me!\\'\\n  const [label, setLabel] = useState(initialLabel)\\n  const [toggled, setToggled] = useState(false)\\n  const onToggleHandler = () => {\\n    if (label === initialLabel) {\\n      setLabel(\\\"I\\'m on!\\\")\\n      setToggled(true)\\n    } else {\\n      setLabel(initialLabel)\\n      setToggled(false)\\n    }\\n  }\\n  return (\\n    <Fragment>\\n      <div className={styles.toggleWrapperExample}>\\n        <Toggle onToggle={onToggleHandler} toggled={toggled} />\\n        <div className={styles.toggleLabelExample}>{label}</div>\\n      </div>\\n    </Fragment>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Fragment,\n      Playground,\n      Props,\n      Toggle,\n      styles\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const initialLabel = \"Toggle me!\";\n        const [label, setLabel] = useState(initialLabel);\n        const [toggled, setToggled] = useState(false);\n\n        const onToggleHandler = () => {\n          if (label === initialLabel) {\n            setLabel(\"I'm on!\");\n            setToggled(true);\n          } else {\n            setLabel(initialLabel);\n            setToggled(false);\n          }\n        };\n\n        return <Fragment mdxType=\"Fragment\">\n      <div className={styles.toggleWrapperExample}>\n        <Toggle onToggle={onToggleHandler} toggled={toggled} mdxType=\"Toggle\" /> \n        <div className={styles.toggleLabelExample}>{label}</div>\n      </div>\n    </Fragment>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}