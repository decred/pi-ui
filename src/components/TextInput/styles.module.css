.textinputWrapper {
  width: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
}

.textinputWrapper:not(:first-child) {
  margin-top: 2.2rem;
}

.textinputWrapper.withoutLabel {
  margin-top: 0;
}

.textinput {
  background-color: transparent;
  outline: 0;
  border: 0;
  width: 100%;
  border-bottom: 0.1rem solid var(--input-border-color);
  font-size: var(--font-size-normal);
  transition: all 0.25s;
  line-height: var(--spacing-2);
  color: var(--text-color);
}

.textinputLabel {
  position: absolute;
  top: -0.1rem;
  left: 0;
  color: var(--text-input-color);
  font-size: var(--font-size-normal);
  font-weight: var(--font-weight-regular);
  transition: all 0.25s;
}

.textinput:focus,
.textinput:not(:placeholder-shown) {
  border-bottom: 0.1rem solid var(--color-primary);
}

.textinput:focus + .textinputLabel,
.textinput:not(:placeholder-shown) + .textinputLabel {
  top: -2rem;
  font-size: var(--font-size-small);
}

.staticTextInputLabel:focus + .textinputLabel,
.staticTextInputLabel {
  position: relative;
  top: initial !important;
  order: -1;
  font-size: var(--font-size-small);
}

.message {
  position: relative;
  visibility: hidden;
  font-size: var(--font-size-small);
  min-height: var(--spacing-1);
  line-height: var(--spacing-1);
  margin-top: 1px;
}

.textinputWrapper.error .message {
  visibility: visible;
  color: var(--color-orange);
  text-align: left;
}

.textinputWrapper.success .message {
  visibility: visible;
  color: var(--color-green);
  text-align: left;
}

.errorIcon {
  color: var(--color-orange);
  position: absolute;
  right: 0;
  transform: translateY(-100%) translateY(-5px);
  font-size: var(--font-size-large);
}

.successIcon {
  position: absolute;
  right: 0;
  transform: translateY(-100%) translateY(-5px);
  font-size: var(--font-size-large);
}

.childrenWrapper {
  position: absolute;
  right: 0;
  transform: translateY(-100%) translateY(-5px);
}

.childrenWrapper,
.childrenWrapper > div {
  line-height: 0;
}

.childrenWrapper > div > * {
  line-height: initial;
}

.textinputWrapper.error .childrenWrapper {
  right: 20px;
}

/* override chrome's autocomplete styling */

@keyframes autofill {
  to {
    color: white;
    background: transparent;
  }
}

.textinput:-webkit-autofill {
  transition-delay: 99999s;
  -webkit-transition-delay: 99999s;
  animation-name: "autofill";
  -webkit-animation-name: "autofill";
  animation-fill-mode: both;
  -webkit-animation-fill-mode: both;
  -webkit-text-fill-color: var(--text-color) !important;
}

.textinputWrapper.success .textinput {
  border-bottom: 0.1rem solid var(--color-green);
}

.textinputWrapper.error .textinput {
  border-bottom: 0.1rem solid var(--color-orange);
}

.textinputWrapper.success .textinput:focus,
.textinputWrapper.success .textinput:not(:placeholder-shown) {
  border-bottom: 0.1rem solid var(--color-green);
}

.textinputWrapper.error .textinput:focus,
.textinputWrapper.error .textinput:not(:placeholder-shown) {
  border-bottom: 0.1rem solid var(--color-orange);
}
