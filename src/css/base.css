*,
*::before,
*::after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

html {
  font-size: 62.5%;
  box-sizing: border-box;
  background-color: var(--html-bg);
}

body {
  font-size: var(--font-size-normal);
  font-family: var(--font-family-text);
  color: var(--text-color);
  line-height: var(--spacing-2);
}

a,
a:link,
a:visited {
  text-decoration: none;
}

.toggleWrapperExample {
  display: flex;
  align-items: center;
  width: 16rem;
}

.toggleLabelExample {
  margin-left: 1rem;
}

.dropdownCustomArrowExample {
  right: -1rem;
  top: 2rem;
}

.statusBarMarkerTooltipExample {
  width: 22.5rem;
}

.dropdownCustomListExample {
  margin-top: 4.5rem !important;
}

.exampledDatepickerArrow {
  position: relative;
  height: 100%;
  width: 2rem;
}

.exampledDatepickerArrow:after {
  content: "";
  width: 0;
  height: 0;
  border: 0.5rem solid transparent;
  border-color: var(--color-gray) transparent transparent transparent;
  color: var(--color-primary);
  position: absolute;
  top: 0.6rem;
  right: 0.3rem;
}

.exampledDatepickerArrowOpen {
  composes: exampledDatepickerArrow;
}

.exampledDatepickerArrowOpen:after {
  top: 0.3rem;
  border-color: transparent transparent var(--color-primary) transparent;
}

.exampledDatepickerValueWrapper {
  cursor: pointer;
  display: inline-flex;
}

/**
  RadioButtonGroup accepts an array of classes `optionsClassName={[styles.radioButton1, styles.radioButton2]}`
  in order to style each radio separately, or a string when all buttons have same style `optionsClassName={styles.radioButton1}`
*/
.radioButton1 > label > label {
  color: var(--color-orange);
}

.radioButton2 > label > label {
  color: var(--color-green);
}

.radioButton1 > label > span {
  border-color: var(--color-orange) !important;
}

.radioButton2 > label > span {
  border-color: var(--color-green) !important;
}

.radioButton1 > label > span > span {
  background: var(--color-orange) !important;
}

.radioButton2 > label > span > span {
  background: var(--color-green) !important;
}
